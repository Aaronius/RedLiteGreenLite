<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		width="225" height="75" showStatusBar="false"
		type="lightweight" systemChrome="none" transparent="true"
		alwaysInFront="true" initialize="startTransition();"
		skinClass="com.aaronhardy.rlgl.view.skin.ToastSkin">
	<fx:Script>
		<![CDATA[
			import com.aaronhardy.rlgl.enums.Color;
			
			import mx.effects.Tween;
			import mx.events.TweenEvent;
			
			[Embed('assets/green48.png')]
			protected var GreenIcon48:Class;
			
			[Embed('assets/red48.png')]
			protected var RedIcon48:Class;
			
			[Bindable]
			public var lastModifiedAlias:String;
			
			[Bindable]
			public var color:String;
			
			protected function startTransition():void
			{
				var screenBounds:Rectangle = Screen.mainScreen.visibleBounds;
				nativeWindow.x = screenBounds.x + screenBounds.width - width;
				
				// -20 to provide a little gap between the toast and the bottom of the screen
				var stableY:Number = screenBounds.y + screenBounds.height - height - 20;
				moveInPath.valueFrom = stableY + height / 2;
				moveInPath.valueTo = stableY;
				moveOutPath.valueFrom = stableY;
				moveOutPath.valueTo = stableY - height / 2;
				moveSequence.play();
			}
			
			public function get nativeWindowY():Number
			{
				return nativeWindow.y;
			}
			
			public function set nativeWindowY(value:Number):void
			{
				nativeWindow.y = value;
			}
			
			protected function getIcon(status:String):Class
			{
				switch (status)
				{
					case Color.GREEN:
						return GreenIcon48;
					case Color.RED:
					default:
						return RedIcon48;
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Sequence id="moveSequence">
			<s:Animate duration="300" target="{this}">
				<s:SimpleMotionPath id="moveInPath" property="nativeWindowY"/>
				<s:SimpleMotionPath property="alpha" valueFrom="0" valueTo="1"/>
			</s:Animate>
			<s:Pause duration="3000"/>
			<s:Animate duration="300" target="{this}">
				<s:SimpleMotionPath id="moveOutPath" property="nativeWindowY"/>
				<s:SimpleMotionPath property="alpha" valueFrom="1" valueTo="0"/>
			</s:Animate>
		</s:Sequence>
	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout paddingTop="10" paddingRight="10" 
				paddingBottom="10" paddingLeft="10" 
				verticalAlign="middle"/>
	</s:layout>

	<mx:Image source="{getIcon(color)}"/>
	
	<s:VGroup gap="0">
		<s:Label width="100%" 
				text="{Color.getLabel(color)}"
				fontSize="30"/>
		<s:Label width="100%" 
				text="Set by {lastModifiedAlias}"
				fontSize="9"
				maxDisplayedLines="1"/>
	</s:VGroup>
</s:Window>
